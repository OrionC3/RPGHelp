// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkGroup_RPGHelp.DAL.Contexts;

#nullable disable

namespace WorkGroup_RPGHelp.DAL.Migrations
{
    [DbContext(typeof(RPGHelpContext))]
    [Migration("20251016082805_init charactere")]
    partial class initcharactere
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CampagnUsers", b =>
                {
                    b.Property<int>("CampagnsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("CampagnsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("CampagnUsers");
                });

            modelBuilder.Entity("RoleUsers", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("RoleUsers");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            RoleId = 2,
                            UserId = 1
                        },
                        new
                        {
                            RoleId = 3,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("WorkGroup_RPGHelp.DL.Entities.Campagn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Campagn", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ma première Campagne"
                        },
                        new
                        {
                            Id = 2,
                            Name = "True Story"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dragon First"
                        });
                });

            modelBuilder.Entity("WorkGroup_RPGHelp.DL.Entities.Charactere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaseAttackBonus")
                        .HasColumnType("int");

                    b.Property<int?>("CampagnId")
                        .HasColumnType("int");

                    b.Property<int>("Charisma")
                        .HasColumnType("int");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<int>("Defence")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10);

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("FortitudeSave")
                        .HasColumnType("int");

                    b.Property<int>("IdRace")
                        .HasColumnType("int");

                    b.Property<int>("Initiative")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PVCurrent")
                        .HasColumnType("int");

                    b.Property<int>("PVMax")
                        .HasColumnType("int");

                    b.Property<int>("ReflexeSave")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WillpowerSave")
                        .HasColumnType("int");

                    b.Property<int>("Wisdom")
                        .HasColumnType("int");

                    b.Property<int>("XP")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampagnId");

                    b.HasIndex("UserId");

                    b.ToTable("Characteres", null, t =>
                        {
                            t.HasCheckConstraint("CK_Charactere__Charisma", "Charisma >= 0");

                            t.HasCheckConstraint("CK_Charactere__Constitution", "Constitution >= 0");

                            t.HasCheckConstraint("CK_Charactere__Dexterity", "Dexterity >= 0");

                            t.HasCheckConstraint("CK_Charactere__Intelligence", "Intelligence >= 0");

                            t.HasCheckConstraint("CK_Charactere__Level", "Level >= 0");

                            t.HasCheckConstraint("CK_Charactere__PVMax", "PVMax > 0");

                            t.HasCheckConstraint("CK_Charactere__Speed", "Speed >= 0");

                            t.HasCheckConstraint("CK_Charactere__Strength", "Strength >= 0");

                            t.HasCheckConstraint("CK_Charactere__Wisdom", "Wisdom >= 0");

                            t.HasCheckConstraint("CK_Charactere__XP", "XP >= 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseAttackBonus = 1,
                            Charisma = 10,
                            Constitution = 14,
                            Defence = 17,
                            Dexterity = 10,
                            FortitudeSave = 4,
                            IdRace = 1,
                            Initiative = 0,
                            Intelligence = 8,
                            Level = 1,
                            Name = "Arik le Solide",
                            PVCurrent = 12,
                            PVMax = 12,
                            ReflexeSave = 0,
                            Speed = 30,
                            Strength = 16,
                            UserId = 1,
                            WillpowerSave = 1,
                            Wisdom = 12,
                            XP = 0
                        },
                        new
                        {
                            Id = 2,
                            BaseAttackBonus = 0,
                            Charisma = 8,
                            Constitution = 12,
                            Defence = 15,
                            Dexterity = 18,
                            FortitudeSave = 1,
                            IdRace = 2,
                            Initiative = 4,
                            Intelligence = 10,
                            Level = 1,
                            Name = "Elara la Furtive",
                            PVCurrent = 10,
                            PVMax = 10,
                            ReflexeSave = 6,
                            Speed = 30,
                            Strength = 10,
                            UserId = 2,
                            WillpowerSave = 2,
                            Wisdom = 14,
                            XP = 0
                        },
                        new
                        {
                            Id = 3,
                            BaseAttackBonus = 1,
                            Charisma = 8,
                            Constitution = 16,
                            Defence = 16,
                            Dexterity = 12,
                            FortitudeSave = 5,
                            IdRace = 3,
                            Initiative = 1,
                            Intelligence = 10,
                            Level = 1,
                            Name = "Borin Pied-de-Fer",
                            PVCurrent = 14,
                            PVMax = 14,
                            ReflexeSave = 1,
                            Speed = 20,
                            Strength = 14,
                            UserId = 1,
                            WillpowerSave = 0,
                            Wisdom = 10,
                            XP = 0
                        });
                });

            modelBuilder.Entity("WorkGroup_RPGHelp.DL.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "GM"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Players"
                        });
                });

            modelBuilder.Entity("WorkGroup_RPGHelp.DL.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User_", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "fabian@test.com",
                            Password = ""
                        },
                        new
                        {
                            Id = 2,
                            Email = "mathieu@test.com",
                            Password = ""
                        });
                });

            modelBuilder.Entity("CampagnUsers", b =>
                {
                    b.HasOne("WorkGroup_RPGHelp.DL.Entities.Campagn", null)
                        .WithMany()
                        .HasForeignKey("CampagnsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkGroup_RPGHelp.DL.Entities.Users", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoleUsers", b =>
                {
                    b.HasOne("WorkGroup_RPGHelp.DL.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkGroup_RPGHelp.DL.Entities.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WorkGroup_RPGHelp.DL.Entities.Charactere", b =>
                {
                    b.HasOne("WorkGroup_RPGHelp.DL.Entities.Campagn", "Campagns")
                        .WithMany("Characteres")
                        .HasForeignKey("CampagnId");

                    b.HasOne("WorkGroup_RPGHelp.DL.Entities.Users", "Users")
                        .WithMany("Characteres")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campagns");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WorkGroup_RPGHelp.DL.Entities.Campagn", b =>
                {
                    b.Navigation("Characteres");
                });

            modelBuilder.Entity("WorkGroup_RPGHelp.DL.Entities.Users", b =>
                {
                    b.Navigation("Characteres");
                });
#pragma warning restore 612, 618
        }
    }
}
